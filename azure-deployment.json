{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "projectName": {
      "type": "string",
      "defaultValue": "sre-cicd-pipeline",
      "metadata": {
        "description": "Name of the project"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "containerImageTag": {
      "type": "string",
      "defaultValue": "latest",
      "metadata": {
        "description": "Docker image tag to deploy"
      }
    },
    "cpuCores": {
      "type": "string",
      "defaultValue": "0.5",
      "metadata": {
        "description": "Number of CPU cores"
      }
    },
    "memoryInGb": {
      "type": "string",
      "defaultValue": "1.0",
      "metadata": {
        "description": "Memory in GB"
      }
    },
    "replicaCount": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 10,
      "metadata": {
        "description": "Number of container instances"
      }
    }
  },
  "variables": {
    "containerRegistryName": "[concat(parameters('projectName'), 'acr', uniqueString(resourceGroup().id))]",
    "containerGroupName": "[concat(parameters('projectName'), '-cg')]",
    "containerName": "[concat(parameters('projectName'), '-container')]",
    "dnsNameLabel": "[concat(parameters('projectName'), '-', uniqueString(resourceGroup().id))]",
    "imageRepository": "[concat(variables('containerRegistryName'), '.azurecr.io/', parameters('projectName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-07-01",
      "name": "[variables('containerRegistryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true
      },
      "tags": {
        "Project": "SRE-Portfolio",
        "Component": "Container-Registry"
      }
    },
    {
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2023-05-01",
      "name": "[concat(variables('containerGroupName'), '-', copyIndex(1))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))]"
      ],
      "copy": {
        "name": "containerGroupLoop",
        "count": "[parameters('replicaCount')]"
      },
      "properties": {
        "containers": [
          {
            "name": "[variables('containerName')]",
            "properties": {
              "image": "[concat(variables('imageRepository'), ':', parameters('containerImageTag'))]",
              "ports": [
                {
                  "port": 8080,
                  "protocol": "TCP"
                }
              ],
              "environmentVariables": [
                {
                  "name": "APP_VERSION",
                  "value": "1.0.0"
                },
                {
                  "name": "ENVIRONMENT",
                  "value": "production"
                },
                {
                  "name": "INSTANCE_ID",
                  "value": "[concat('azure-', copyIndex(1))]"
                },
                {
                  "name": "LOG_DIR",
                  "value": "/var/log"
                }
              ],
              "resources": {
                "requests": {
                  "cpu": "[parameters('cpuCores')]",
                  "memoryInGB": "[parameters('memoryInGb')]"
                }
              },
              "livenessProbe": {
                "httpGet": {
                  "path": "/health",
                  "port": 8080,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 30,
                "periodSeconds": 30,
                "timeoutSeconds": 5,
                "failureThreshold": 3
              },
              "readinessProbe": {
                "httpGet": {
                  "path": "/ready",
                  "port": 8080,
                  "scheme": "HTTP"
                },
                "initialDelaySeconds": 10,
                "periodSeconds": 10,
                "timeoutSeconds": 5,
                "failureThreshold": 3
              }
            }
          }
        ],
        "osType": "Linux",
        "restartPolicy": "Always",
        "ipAddress": {
          "type": "Public",
          "dnsNameLabel": "[concat(variables('dnsNameLabel'), '-', copyIndex(1))]",
          "ports": [
            {
              "port": 8080,
              "protocol": "TCP"
            }
          ]
        },
        "imageRegistryCredentials": [
          {
            "server": "[concat(variables('containerRegistryName'), '.azurecr.io')]",
            "username": "[variables('containerRegistryName')]",
            "password": "[listCredentials(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName')), '2023-07-01').passwords[0].value]"
          }
        ]
      },
      "tags": {
        "Project": "SRE-Portfolio",
        "Component": "Application",
        "Instance": "[concat('instance-', copyIndex(1))]"
      }
    },
    {
      "type": "Microsoft.Network/trafficManagerProfiles",
      "apiVersion": "2022-04-01",
      "name": "[concat(parameters('projectName'), '-tm')]",
      "location": "global",
      "dependsOn": [
        "containerGroupLoop"
      ],
      "properties": {
        "profileStatus": "Enabled",
        "trafficRoutingMethod": "Weighted",
        "dnsConfig": {
          "relativeName": "[concat(parameters('projectName'), '-', uniqueString(resourceGroup().id))]",
          "ttl": 30
        },
        "monitorConfig": {
          "protocol": "HTTP",
          "port": 8080,
          "path": "/health",
          "intervalInSeconds": 30,
          "timeoutInSeconds": 10,
          "toleratedNumberOfFailures": 3
        }
      },
      "tags": {
        "Project": "SRE-Portfolio",
        "Component": "Load-Balancer"
      }
    }
  ],
  "outputs": {
    "containerRegistryLoginServer": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', variables('containerRegistryName'))).loginServer]"
    },
    "containerRegistryName": {
      "type": "string",
      "value": "[variables('containerRegistryName')]"
    },
    "trafficManagerUrl": {
      "type": "string",
      "value": "[concat('http://', reference(resourceId('Microsoft.Network/trafficManagerProfiles', concat(parameters('projectName'), '-tm'))).dnsConfig.fqdn)]"
    },
    "containerEndpoints": {
      "type": "array",
      "copy": {
        "count": "[parameters('replicaCount')]",
        "input": {
          "instanceName": "[concat(variables('containerGroupName'), '-', copyIndex(1))]",
          "fqdn": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups', concat(variables('containerGroupName'), '-', copyIndex(1)))).ipAddress.fqdn]",
          "url": "[concat('http://', reference(resourceId('Microsoft.ContainerInstance/containerGroups', concat(variables('containerGroupName'), '-', copyIndex(1)))).ipAddress.fqdn, ':8080')]"
        }
      }
    }
  }
}
